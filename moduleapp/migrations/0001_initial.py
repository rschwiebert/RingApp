# Generated by Django 3.2.13 on 2022-07-02 02:13

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ringapp', '0059_delete_news'),
    ]

    operations = [
        migrations.CreateModel(
            name='Citation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=128)),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='module_publication', to='ringapp.publication')),
            ],
            options={
                'ordering': ('publication__authors', 'publication__title'),
            },
        ),
        migrations.CreateModel(
            name='Metaproperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('definition', models.TextField(max_length=1024)),
            ],
            options={
                'verbose_name_plural': 'Metaproperties',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.TextField(max_length=1000)),
                ('notes', models.CharField(blank=True, max_length=500, null=True)),
                ('opposite_ring', models.BooleanField(default=False, help_text='When true, use the opposite ring of the associated ring.')),
                ('citation', models.ManyToManyField(blank=True, to='moduleapp.Citation')),
                ('ring', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ringapp.ring')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('definition', models.TextField(max_length=1024)),
                ('citation', models.ManyToManyField(blank=True, to='moduleapp.Citation')),
            ],
            options={
                'verbose_name_plural': 'Properties',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Logic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variety', models.PositiveSmallIntegerField(choices=[(0, '===>'), (1, '<==>')], null=True)),
                ('active', models.BooleanField(default=True)),
                ('citation', models.ManyToManyField(blank=True, to='moduleapp.Citation')),
                ('concs', models.ManyToManyField(related_name='conclusions', to='moduleapp.Property', verbose_name='conclusions')),
                ('hyps', models.ManyToManyField(related_name='hypotheses', to='moduleapp.Property', verbose_name='hypotheses')),
                ('ring_hyps', models.ManyToManyField(blank=True, related_name='ring_hypotheses', to='ringapp.PropertySide', verbose_name='ring_hypotheses')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyMetaproperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_metaproperty', models.BooleanField(null=True)),
                ('citation', models.ManyToManyField(blank=True, to='moduleapp.Citation')),
                ('example', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='moduleapp.module')),
                ('metaproperty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='moduleapp.metaproperty')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='moduleapp.property')),
            ],
            options={
                'verbose_name_plural': 'Property-metaproperty relationships',
                'unique_together': {('property', 'metaproperty')},
            },
        ),
        migrations.CreateModel(
            name='ModuleProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has', models.BooleanField(null=True)),
                ('reason', models.CharField(blank=True, max_length=200, null=True)),
                ('citation', models.ManyToManyField(blank=True, related_name='citation', to='moduleapp.Citation')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='moduleapp.module')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='moduleapp.property')),
            ],
            options={
                'verbose_name_plural': 'Module-property relationships',
                'unique_together': {('module', 'property')},
            },
        ),
    ]
